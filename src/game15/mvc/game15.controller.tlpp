/*
                                _  ____                          _                 _  _
  __ _   __ _  _ __ ___    ___ / || ___|      ___   ___   _ __  | |_  _ __   ___  | || |  ___  _ __
 / _` | / _` || '_ ` _ \  / _ \| ||___ \     / __| / _ \ | '_ \ | __|| '__| / _ \ | || | / _ \| '__|
| (_| || (_| || | | | | ||  __/| | ___) | _ | (__ | (_) || | | || |_ | |   | (_) || || ||  __/| |
 \__, | \__,_||_| |_| |_| \___||_||____/ (_) \___| \___/ |_| |_| \__||_|    \___/ |_||_| \___||_|
 |___/

*/
#include "totvs.ch"
#include "game15.th"
#include "tlpp-core.th"

namespace game15
using namespace game15

class Game15Controller

    private data lExecute as logical
    private data lActive as logical

    private data oView as object
    private data oModel as object

    public method New() as object
    public method Activate() as logical
    public method DeActivate() as logical
    public method CanExecute() as logical
    public method IsActive() as logical

endclass

method New() class Game15Controller
    self:lActive:=.F.
    if (self:CanExecute())
        self:oModel:=Game15Model():New()
        self:oView:=Game15View():New(self:oModel)
    endif
return(self)

method Activate() class Game15Controller
    if ((self:CanExecute()).and.(!self:lActive))
        self:lActive:=self:oModel:Activate()
        if (self:lActive)
            self:oView:Activate()
        endif
    endif
return(self:lActive)

method DeActivate() class Game15Controller
    if (self:lActive)
        if (valType(self:oView)=="O")
            self:oView:DeActivate()
            FreeObj(@self:oView)
        endif
        if (valType(self:oModel)=="O")
            self:oModel:DeActivate()
            FreeObj(@self:oModel)
        endif
        self:lActive:=.F.
    endif
return(self:lActive)

method CanExecute() class Game15Controller
    self:lExecute:=FWIsInCallStack("GAME15.U_GAME15RUN")
return(self:lExecute)

method IsActive() class Game15Controller
return(self:lActive)
