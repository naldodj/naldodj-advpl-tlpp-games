/*
                 _         _                      _
 ___  _   _   __| |  ___  | | __ _   _    __   __(_)  ___ __      __
/ __|| | | | / _` | / _ \ | |/ /| | | |   \ \ / /| | / _ \\ \ /\ / /
\__ \| |_| || (_| || (_) ||   < | |_| | _  \ V / | ||  __/ \ V  V /
|___/ \__,_| \__,_| \___/ |_|\_\ \__,_|(_)  \_/  |_| \___|  \_/\_/

*/

#include "totvs.ch"
#include "sudoku.th"
#include "parmtype.ch"
#include "tlpp-core.th"

namespace sudoku
using namespace sudoku
using namespace naldodj.games

class SudokuView

    private data jSudokuData as json

    private data lActive as logical
    private data lExecute as logical

    public data oDlg as object
    public data oController as object

    public method New(oController as object) as object
    public method Activate() as logical
    public method DeActivate() as logical

    public method IsActive() as logical
    public method CanExecute() as logical

    public method SudokuLevel(aLevels as array,lAskSudokuLevel as logical,lSudokuKeepLevelOption as logical,nLevel as numeric) as numeric

    private method CreateBoard() as logical

    public method SudokuData() as json
    public method SudokuDataSet(cKey as character,xValue as variant) as logical
    public method SudokuDataGet(cKey as character,xDefault as variant) as variant

    public method SudokuTTimerCreate(oParent as object) as logical
    public method SudokuTTimerUpdate() as logical
    public method SudokuTTimerActivate() as logical
    public method SudokuTTimerDeactivate() as logical

    public method SudokuBoardBar(aSudokuBoardView as array) as json

endclass

method New(oController) class SudokuView
    paramtype 1 var oController as object
    self:lActive:=.F.
    if (self:CanExecute().and.(GetClassName(oController)=="SUDOKU.SUDOKUCONTROLLER"))
        self:jSudokuData:=JSONObject():New()
        self:oController:=oController
    endif
return(self)

method Activate() class SudokuView
    if (;
            ((ValType(self:oController)=="O").and.(GetClassName(self:oController)=="SUDOKU.SUDOKUCONTROLLER"));
            .and.;
            (self:oController:IsActive());
            .and.;
            (!self:lActive).and.(self:CanExecute());
    )
        self:lActive:=self:CreateBoard()
        if (self:lActive)
            self:oDlg:Activate(nil,nil,nil,.T.,self:oDlg:bValid,nil,self:oDlg:bInit,nil,nil)
        else
            self:DeActivate()
        endif
        MsObjects():FreeObjects(@self:jSudokuData)
    endif
return(self:lActive)

method DeActivate() class SudokuView
    if (self:lActive)
        if (valType(self:oDlg)=="O")
            self:oDlg:End()
        endif
        FreeObj(@self:oDlg)
        DelClassIntf()
        self:lActive:=.F.
    endif
return(self:lActive)

method IsActive() class SudokuView
return(self:lActive)

method CanExecute() class SudokuView
    self:lExecute:=FWIsInCallStack("SUDOKU.U_SUDOKURUN")
    if (self:lExecute).and.(ValType(self:oController)=="O")
        self:lExecute:=(GetClassName(self:oController)=="SUDOKU.SUDOKUCONTROLLER")
    endif
return(self:lExecute)

method SudokuData() class SudokuView
    local jSudokuData as json
    local lSudokuData as logical
    lSudokuData:=(self:CanExecute().and.self:IsActive())
    if (lSudokuData)
        jSudokuData:=self:jSudokuData
    endif
return(jSudokuData)

method SudokuDataSet(cKey,xValue) class SudokuView
    local lSudokuDataSet as logical
    lSudokuDataSet:=(self:CanExecute().and.self:IsActive())
    if (lSudokuDataSet)
        paramtype 1 var cKey as character
        self:jSudokuData[cKey]:=xValue
    endif
return(lSudokuDataSet)

method SudokuDataGet(cKey,xDefault) class SudokuView
    local lSudokuDataGet as logical
    local xValue as variant
    lSudokuDataGet:=(self:CanExecute().and.self:IsActive())
    if (lSudokuDataGet)
        paramtype 1 var cKey as character
        if (self:jSudokuData:HasProperty(cKey))
            xValue:=self:jSudokuData[cKey]
        else
            xValue:=xDefault
        endif

    endif
return(xValue)

method SudokuLevel(aLevels,lAskSudokuLevel,lSudokuKeepLevelOption,nLevel) class SudokuView

    local cTitle as character

    local jObjects as json
    local jObjectsSudokuParametersBar as json

    begin sequence

        if (!self:CanExecute())
            break
        endif

        paramtype aLevels as array
        paramtype lAskSudokuLevel as logical optional default .F.
        paramtype lSudokuKeepLevelOption as logical optional
        paramtype nLevel as numeric optional

        if (;
                (!lAskSudokuLevel);
                .and.;
                (!Empty(lSudokuKeepLevelOption));
        )
            break
        endif

        jObjects:=JSONObject():New()

        DEFAULT lSudokuKeepLevelOption:=.T.

        cTitle:=SUDOKU_TITLE

        DEFINE FONT jObjects["oFont"] NAME "Roboto" SIZE 0,-11 BOLD
        DEFINE MSDIALOG jObjects["oDlg"] FROM 094,001 to 300,350 TITLE __Web2Ascii(cTitle) OF GetWndDefault() STYLE DS_MODALFRAME STATUS PIXEL

            @ 015,005 GROUP jObjects["oGroup"] to 075,172 LABEL __Web2Ascii("Escolha o N&iacute;vel do Jogo") OF jObjects["oDlg"] PIXEL
            jObjects["oGroup"]:oFont:=jObjects["oFont"]

            jObjects["oRadio"]:=TRadMenu():New(025,010,aLevels,BSetGet(nLevel),jObjects["oDlg"],nil,nil,nil,nil,,nil,nil,115,010,nil,nil,nil,.T.)

            @ 085,010 CHECKBOX jObjects["oCheckBox"] VAR lSudokuKeepLevelOption PROMPT __Web2Ascii("Utilizar a op&ccedil;ao acima at&eacute; o final do Jogo.") SIZE 160,010 OF jObjects["oDlg"] PIXEL

            jObjects["oDlg"]:lEscClose:=.F.//Nao permite sair ao se pressionar a tecla ESC.

        ACTIVATE MSDIALOG jObjects["oDlg"] CENTERED ON INIT (jObjectsSudokuParametersBar:=SudokuParametersBar(@jObjects["oDlg"],@lAskSudokuLevel))

        MsObjects():FreeObjects(@jObjectsSudokuParametersBar)
        MsObjects():FreeObjects(@jObjects)

        DelClassIntf()

    end sequence

return(nLevel)

method CreateBoard() class SudokuView

    local cTitle as character

    local lCreateBoard as logical

    local jSudokuData as json

    local oDlg as object
    local oView as object
    local oController as object

    begin sequence

        oView:=self
        lCreateBoard:=oView:CanExecute()
        if (!lCreateBoard)
            break
        endif

        oController:=self:oController

        jSudokuData:=oView:jSudokuData

        cTitle:=SUDOKU_TITLE

        DEFINE FONT jSudokuData["oFont"] NAME "Courier New" SIZE 0,-11 BOLD
        DEFINE FONT jSudokuData["oFontNum"] NAME "Courier New" SIZE 18,30 BOLD

        DEFINE MSDIALOG self:oDlg TITLE __Web2Ascii(cTitle) From 0,0 to 610,610 OF GetWndDefault() STYLE DS_MODALFRAME STATUS PIXEL
        oDlg:=self:oDlg

        oDlg:lEscClose:=.F.

        jSudokuData["aSudokuGrps"]:=Array(9)

        @ 015,005 GROUP jSudokuData["aSudokuGrps"][1] to 100,100 OF oDlg PIXEL
        @ 015,102 GROUP jSudokuData["aSudokuGrps"][2] to 100,200 OF oDlg PIXEL
        @ 015,202 GROUP jSudokuData["aSudokuGrps"][3] to 100,300 OF oDlg PIXEL

        @ 100,005 GROUP jSudokuData["aSudokuGrps"][4] to 200,100 OF oDlg PIXEL
        @ 100,102 GROUP jSudokuData["aSudokuGrps"][5] to 200,200 OF oDlg PIXEL
        @ 100,202 GROUP jSudokuData["aSudokuGrps"][6] to 200,300 OF oDlg PIXEL

        @ 200,005 GROUP jSudokuData["aSudokuGrps"][7] to 300,100 OF oDlg PIXEL
        @ 200,102 GROUP jSudokuData["aSudokuGrps"][8] to 300,200 OF oDlg PIXEL
        @ 200,202 GROUP jSudokuData["aSudokuGrps"][9] to 300,300 OF oDlg PIXEL

        aEval(jSudokuData["aSudokuGrps"],{|,nElem|jSudokuData["aSudokuGrps"][nElem]:oFont:=jSudokuData["oFont"]})

        oDlg:bInit:={;
            ||;
                 jSudokuData["aSudokuBoardView"]:=oController:BuildSudokuBoard(jSudokuData["oFontNum"]);
                ,jSudokuData["SudokuBoardBarObjects"]:=oController:SudokuBoardBar(@jSudokuData["aSudokuBoardView"]);
        }

        lCreateBoard:=.T.

    end sequence

return(lCreateBoard)

method SudokuTTimerCreate(oParent) class SudokuView
    local cSpace50 as character
    local lSudokuTTimerCreate as logical
    local oView as object
    local oSudokuGetTTimer as object
    lSudokuTTimerCreate:=((self:CanExecute()).and.(self:IsActive()))
    if (lSudokuTTimerCreate)
        paramtype 1 var oParent as object class TBAR
        oView:=self
        oView:SudokuTTimerDeactivate()
        oView:SudokuDataSet("cSudokuStartTime",Time())
        oView:SudokuDataSet("cSudokuTimeElapsed","00:00:00")
        cSpace50:=Space(50)
        @ 000,080 MSGET oSudokuGetTTimer VAR (cSpace50+oView:SudokuData()["cSudokuTimeElapsed"]) SIZE 200,010 OF oParent PIXEL WHEN .F. CENTERED
        oView:SudokuDataSet("oSudokuGetTTimer",oSudokuGetTTimer)
        DEFINE;
         TIMER self:jSudokuData["oSudokuTTimer"];
      INTERVAL (1);
        ACTION (oView:SudokuTTimerUpdate());
             OF self:oDlg
    endif
return(lSudokuTTimerCreate)

method SudokuTTimerUpdate() class SudokuView
    local lSudokuTTimerUpdate as logical
    lSudokuTTimerUpdate:=((self:CanExecute()).and.(self:IsActive()))
    lSudokuTTimerUpdate:=((lSudokuTTimerUpdate).and.(self:jSudokuData:HasProperty("cSudokuTimeElapsed")))
    lSudokuTTimerUpdate:=((lSudokuTTimerUpdate).and.(self:jSudokuData:HasProperty("cSudokuStartTime")))
    lSudokuTTimerUpdate:=((lSudokuTTimerUpdate).and.(self:jSudokuData:HasProperty("oSudokuGetTTimer")))
    if (lSudokuTTimerUpdate)
        self:SudokuDataSet("cSudokuTimeElapsed",ElapTime(self:jSudokuData["cSudokuStartTime"],Time()))
        self:SudokuDataGet("oSudokuGetTTimer"):Refresh()
    endif
return(lSudokuTTimerUpdate)

method SudokuTTimerActivate() class SudokuView
    local lSudokuTTimerActivate as logical
    lSudokuTTimerActivate:=((self:CanExecute()).and.(self:IsActive()))
    lSudokuTTimerActivate:=((lSudokuTTimerActivate).and.(self:jSudokuData:HasProperty("oSudokuTTimer")))
    if (lSudokuTTimerActivate)
        self:SudokuDataSet("cSudokuTimeElapsed","00:00:00")
        ACTIVATE TIMER self:SudokuDataGet("oSudokuTTimer")
    endif
return(lSudokuTTimerActivate)

method SudokuTTimerDeactivate() class SudokuView
    local lSudokuTTimerDeactivate as logical
    lSudokuTTimerDeactivate:=((self:CanExecute()).and.(self:IsActive()))
    lSudokuTTimerDeactivate:=((lSudokuTTimerDeactivate).and.(self:jSudokuData:HasProperty("oSudokuTTimer")))
    if (lSudokuTTimerDeactivate)
        self:SudokuDataGet("oSudokuTTimer"):Deactivate()
    endif
return(lSudokuTTimerDeactivate)

method SudokuBoardBar(aSudokuBoardView) class SudokuView

    local bButtonOK as codeblock
    local bButtonHelp as codeblock
    local bButtonNewGame as codeblock
    local bButtonEndGame as codeblock
    local bButtonParameters as codeblock
    local bButtonFillNumbers as codeblock

    local cMsgTitle as character
    local cMsgDetail as character

    local jObjects:=JSONObject():New() as json

    local lSudokuWin:=.F. as logical
    local lCheckAllNums:=.F. as logical
    local lSolveAllNums:=.F. as logical

    local oDlg as object
    local oView as object
    local oController as object

    if (self:CanExecute())

        paramtype 1 var aSudokuBoardView as array

        oView:=self
        oDlg:=oView:oDlg
        oController:=oView:oController

        bButtonNewGame:={;
            ||;
                if(;
                     ApMsgYesNo("Deseja Iniciar Novo Jogo?","New Game");
                    ,(;
                         oView:SudokuTTimerDeactivate();
                        ,oDlg:End();
                        ,oController:SudokuDataSet("lSudokuNewGame",.T.);
                    );
                    ,oController:SudokuDataSet("lSudokuNewGame",.F.);
                );
        }

        bButtonFillNumbers:={;
            ||;
                if(;
                        (;
                            (!lSolveAllNums);
                            .and.;
                            (lSolveAllNums:=ApMsgNoYes("Deseja Desistir do Jogo?","Aviso!"));
                        );
                        ,(;
                             if(lSolveAllNums,oView:SudokuTTimerDeactivate(),nil);
                            ,oController:SudokuSolveBoard(@aSudokuBoardView,lSolveAllNums);
                            ,oController:SudokuCheckBoard(@aSudokuBoardView,lSolveAllNums,@cMsgTitle,@cMsgDetail);
                            ,oDlg:Refresh();
                            ,ApMsgInfo(__Web2Ascii(cMsgDetail),__Web2Ascii(cMsgTitle));
                        );
                        ,.F.;
                    );
        }

        bButtonParameters:={||if(oController:SudokuLevel(.T.),Eval(bButtonNewGame),NIL)}

        bButtonOK:={;
            ||;
                 oView:SudokuTTimerDeactivate();
                ,lSudokuWin:=oController:SudokuCheckBoard(@aSudokuBoardView,lCheckAllNums,@cMsgTitle,@cMsgDetail);
                ,oDlg:Refresh();
                ,ApMsgInfo(__Web2Ascii(cMsgDetail),__Web2Ascii(cMsgTitle));
                ,if(!lSudokuWin,oView:SudokuTTimerActivate(),nil);
        }

        bButtonEndGame:={||if(ApMsgNoYes("Deseja Sair do Jogo?","Sair"),oDlg:End(),.F.)}

        bButtonHelp:={||SudokuHelp()}

        DEFINE BUTTONBAR jObjects["oSudokuBoardButtonBar"] SIZE 025,025 3D TOP OF oDlg //PIXEL
        jObjects["oSudokuBoardButtonBar"]:bRClicked:={||AllwaysTrue()}

        DEFINE BUTTON jObjects["oSudokuBoardButtonBarButtonNewGame"] RESOURCE "PMSCOLOR" OF jObjects["oSudokuBoardButtonBar"] GROUP ACTION Eval(bButtonNewGame) TOOLTIP __Web2Ascii("Novo Jogo...<F2>")
        jObjects["oSudokuBoardButtonBarButtonNewGame"]:cTitle:=__Web2Ascii("Novo")
        SetKey(VK_F2,jObjects["oSudokuBoardButtonBarButtonNewGame"]:bAction)

        DEFINE BUTTON jObjects["oSudokuBoardButtonBarButtonFillNumbers"] RESOURCE "DESTINOS" OF jObjects["oSudokuBoardButtonBar"] GROUP ACTION Eval(bButtonFillNumbers) TOOLTIP __Web2Ascii('Preencher n&uacute;meros...<F3>')
        jObjects["oSudokuBoardButtonBarButtonFillNumbers"]:cTitle:=__Web2Ascii("n&uacute;meros")
        SetKey(VK_F3,jObjects["oSudokuBoardButtonBarButtonFillNumbers"]:bAction)

        DEFINE BUTTON jObjects["oSudokuBoardButtonBarButtonParameters"] RESOURCE "BMPPARAM" OF jObjects["oSudokuBoardButtonBar"] GROUP ACTION Eval(bButtonParameters) TOOLTIP __Web2Ascii('Par&acirc;metros...<F4>')
        jObjects["oSudokuBoardButtonBarButtonParameters"]:cTitle:=__Web2Ascii("Config.")
        SetKey(VK_F4,jObjects["oSudokuBoardButtonBarButtonParameters"]:bAction)

        DEFINE BUTTON jObjects["oSudokuBoardButtonBarButtonOK"] RESOURCE "OK" OF jObjects["oSudokuBoardButtonBar"] GROUP ACTION Eval(bButtonOK) TOOLTIP __Web2Ascii('Ok...<Ctrl-O>')
        jObjects["oSudokuBoardButtonBarButtonOK"]:cTitle:=__Web2Ascii("OK")
        oDlg:bSet15:=jObjects["oSudokuBoardButtonBarButtonOK"]:bAction
        SetKey(15,oDlg:bSet15)

        DEFINE BUTTON jObjects["oSudokuBoardButtonBarButtonEnd"] RESOURCE "FINAL" OF jObjects["oSudokuBoardButtonBar"] GROUP ACTION Eval(bButtonEndGame) TOOLTIP __Web2Ascii('Sair...<Ctrl-X>')
        jObjects["oSudokuBoardButtonBarButtonEnd"]:cTitle:=__Web2Ascii("Sair")
        oDlg:bSet24:=jObjects["oSudokuBoardButtonBarButtonEnd"]:bAction
        SetKey(24,oDlg:bSet24)

        DEFINE BUTTON jObjects["oSudokuBoardButtonBarButtonHelp"] RESOURCE "S4WB016N" OF jObjects["oSudokuBoardButtonBar"] GROUP ACTION Eval(bButtonHelp) TOOLTIP __Web2Ascii('Ajuda...<F1>')
        jObjects["oSudokuBoardButtonBarButtonHelp"]:cTitle:=__Web2Ascii("Ajuda")
        SetKey(VK_F1,jObjects["oSudokuBoardButtonBarButtonHelp"]:bAction)

        oView:SudokuTTimerCreate(jObjects["oSudokuBoardButtonBar"])
        oView:SudokuTTimerActivate()

    endif

return(jObjects)

static function SudokuParametersBar(oDlg as object,lAskSudokuLevel as logical) as json

    local bButtonOK:={||oDlg:End()} as codeblock
    local bButtonEnd:={||if(((lAskSudokuLevel).or.ApMsgNoYes("Deseja Sair do Jogo?","Sair")),oDlg:End(),NIL)} as codeblock
    local bButtonHelp:={||SudokuHelp()} as codeblock

    local jObjects:=JSONObject():New() as json

    DEFINE BUTTONBAR jObjects["oSudokuParametersButtonBar"] SIZE 025,025 3D TOP OF oDlg
    jObjects["oSudokuParametersButtonBar"]:bRClicked:={||AllwaysTrue()}

    DEFINE BUTTON jObjects["oSudokuParametersButtonBarButtonOK"] RESOURCE "OK" OF jObjects["oSudokuParametersButtonBar"] GROUP ACTION Eval(bButtonOK) TOOLTIP __Web2Ascii('Ok...<Ctrl-O>')
    jObjects["oSudokuParametersButtonBarButtonOK"]:cTitle:=__Web2Ascii("OK")
    oDlg:bSet15:=jObjects["oSudokuParametersButtonBarButtonOK"]:bAction
    SetKey(15,oDlg:bSet15)

    DEFINE BUTTON jObjects["oSudokuParametersButtonBarButtonEnd"] RESOURCE "FINAL" OF jObjects["oSudokuParametersButtonBar"] GROUP ACTION Eval(bButtonEnd) TOOLTIP __Web2Ascii('Sair...<Ctrl-X>')
    jObjects["oSudokuParametersButtonBarButtonEnd"]:cTitle:=__Web2Ascii("Sair")
    oDlg:bSet24:=jObjects["oSudokuParametersButtonBarButtonEnd"]:bAction
    SetKey(24,oDlg:bSet24)

    DEFINE BUTTON jObjects["oSudokuParametersButtonBarButtonHelp"] RESOURCE "S4WB016N" OF jObjects["oSudokuParametersButtonBar"] GROUP ACTION Eval(bButtonHelp) TOOLTIP __Web2Ascii('Ajuda...<F1>')
    jObjects["oSudokuParametersButtonBarButtonHelp"]:cTitle:=__Web2Ascii("Ajuda")
    SetKey(VK_F1,jObjects["oSudokuParametersButtonBarButtonHelp"]:bAction)

return(jObjects)

static function SudokuHelp() as numeric
return(ShellExecute("open","https://blacktdn.com.br/2008/11/sudoku-tutorial.html","","",1))
